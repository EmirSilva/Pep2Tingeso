apiVersion: v1
kind: PersistentVolume                                  #recurso de almacenamiento en el cluster
metadata:
  name: m3-cliente-frecuente-db-pv                      #nombre unico para este PersistentVolume
  labels:
    type: local                                         #tipo de almacenamiento, en este caso local
spec:
  storageClassName: standard                            #nombre de la clase de almacenamiento, debe coincidir con el PVC
  capacity:
    storage: 1Gi                                        #capacidad de almacenamiento del PV
  accessModes:
    - ReadWriteOnce                                     #modo de acceso, solo un nodo puede montar este volumen en modo lectura/escritura
  hostPath:
    path: "/data/m3-cliente-frecuente-db-data"          #ruta en el host donde se almacenara el volumen
---
apiVersion: v1
kind: PersistentVolumeClaim                             #recurso que solicita almacenamiento del PersistentVolume
metadata:
  name: m3-cliente-frecuente-db-pvc                     #nombre del PersistentVolumeClaim
  labels:
    app: postgres                                       #etiqueta que identifica el PVC
    tier: database                                      #etiqueta adicional para clasificar el PVC
spec:
  storageClassName: standard                            #nombre de la clase de almacenamiento, debe coincidir con el PV
  accessModes:
    - ReadWriteOnce                                     #modo de acceso, debe coincidir con el PV
  resources:
    requests:
      storage: 1Gi                                      #cantidad de almacenamiento solicitada por el PVC
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: m3-cliente-frecuente-db-deployment              #nombre del deployment para el servicio de base de datos
  labels:
    app: m3-cliente-frecuente-db                        #etiqueta que identifica el deployment
    tier: database                                      #etiqueta adicional para clasificar el deployment
spec:
  selector:
    matchLabels:
      app: m3-cliente-frecuente-db                      #el selector define que pods seran gestionados por este deployment
  strategy:
    type: Recreate                                      #estrategia de actualizacion, en este caso se recrean los pods
  template:
    metadata:
      labels:
        app: m3-cliente-frecuente-db                    #etiquetas que se asignaran a los pods creados por este deployment
        tier: database                                  #etiqueta adicional para clasificar los pods
    spec:
      containers:                                       #lista de contenedores que se ejecutaran en los pods
        - name: cliente-db                              #nombre del contenedor dentro del pod
          image: postgres                               #imagen de la base de datos PostgreSQL
          imagePullPolicy: "IfNotPresent"               #politica de extraccion de imagen, si no esta presente se extrae
          ports:
            - containerPort: 5432                       #puerto en el que escucha la base de datos dentro del pod
          env:                                          #variables de entorno para configurar la base de datos
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: DB_PASSWORD
            - name: POSTGRES_DB
              value: m3-cliente-frecuente-db
          volumeMounts:
            - mountPath: /var/lib/postgresql/data       #ruta donde se montara el volumen de datos de la base de datos
              name: m3-cliente-frecuente-db-data        #nombre del volumen que se montara
      volumes:
        - name: m3-cliente-frecuente-db-data            #volumen que se montara en el contenedor
          persistentVolumeClaim:
            claimName: m3-cliente-frecuente-db-pvc      #nombre del PersistentVolumeClaim que solicita el almacenamiento
---
apiVersion: v1
kind: Service
metadata:
  name: m3-cliente-frecuente-db-service                 #nombre del servicio para la base de datos
  labels:
    app: m3-cliente-frecuente-db                        #etiqueta que identifica el servicio
    tier: database                                      #etiqueta adicional para clasificar el servicio
spec:
  ports:
    - port: 5432                                        #puerto en el que el servicio escuchara
      targetPort: 5432                                  #puerto del contenedor al que se redirigira el trafico
      protocol: TCP
  selector:
    app: m3-cliente-frecuente-db                        #selecciona los pods con esta etiqueta
    tier: database                                      #etiqueta adicional para clasificar el servicio
  type: ClusterIP                                       #comunicacion interna (no expone afuera del cluster)