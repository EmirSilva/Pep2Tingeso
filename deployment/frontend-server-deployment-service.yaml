apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-server-deployment #nombre del Deployment
  labels:
    app: frontend-server-deployment
spec:
  selector:
    matchLabels:
      app: frontend-server-deployment
  replicas: 1
  template:
    metadata:
      labels:
        app: frontend-server-deployment
    spec:
      containers:
      - name: frontend-server-container
        image: emirjr/frontend-image:v3 # imagen docker
        ports:
        - containerPort: 80 # puerto en el que escucha frontend
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-server-service
  labels:
    app: frontend-server-deployment # Asegúrate que este label coincide con el del pod en el Deployment
spec:
  selector:
    app: frontend-server-deployment # Este debe coincidir con el label 'app' del template del pod
  ports:
    - protocol: TCP
      port: 80       # Puerto del servicio (interno en el cluster)
      targetPort: 80 # Puerto del contenedor (Nginx escucha en 80)
      nodePort: 31606 # <--- ¡IMPORTANTE! Especificamos el NodePort que usaremos
  type: NodePort # <--- ¡CAMBIA ESTO de LoadBalancer a NodePort!